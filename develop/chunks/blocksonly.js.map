{"version":3,"sources":["webpack://GUI/./src/playground/blocks-only.css","webpack://GUI/./src/playground/blocks-only.css?feb2","webpack://GUI/./src/playground/blocks-only.jsx"],"names":["mapStateToProps","state","vm","scratchGui","VMBlocks","connect","Blocks","VMControls","Controls","BlocksOnly","props","media","styles","controls","App","AppStateHOC","HashParserHOC","appTarget","document","createElement","body","appendChild","ReactDOM","render"],"mappings":";;;;;;;;;;AAAA,2BAA2B,mBAAO,CAAC,gGAA+C;AAClF;;;AAGA;AACA,cAAc,QAAS,gCAAgC,yBAAyB,iBAAiB,gBAAgB,kBAAkB,GAAG;;AAEtI;AACA;AACA;AACA,E;;;;;;;;;;;;ACTA,cAAc,mBAAO,CAAC,mOAA8H;;AAEpJ,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,sGAAmD;;AAExE;;AAEA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;ACnBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAACC,MAAE,EAAED,KAAK,CAACE,UAAN,CAAiBD;AAAtB,GAAL;AAAA,CAA7B;;AAEA,IAAME,QAAQ,GAAGC,2DAAO,CAACL,eAAD,CAAP,CAAyBM,8DAAzB,CAAjB;AACA,IAAMC,UAAU,GAAGF,2DAAO,CAACL,eAAD,CAAP,CAAyBQ,gEAAzB,CAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SACpB,2DAAC,2DAAD,EAASA,KAAT,EACI,2DAAC,QAAD;AACI,QAAI,EAAE,CADV;AAEI,WAAO,EAAE;AACLC,WAAK;AADA;AAFb,IADJ,EAOI,2DAAC,UAAD;AAAY,aAAS,EAAEC,uDAAM,CAACC;AAA9B,IAPJ,CADoB;AAAA,CAAxB;;AAYA,IAAMC,GAAG,GAAGC,sEAAW,CAACC,wEAAa,CAACP,UAAD,CAAd,CAAvB;AAEA,IAAMQ,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,SAA1B;AAEAK,gDAAQ,CAACC,MAAT,CAAgB,2DAAC,GAAD,OAAhB,EAAyBN,SAAzB,E","file":"chunks/blocksonly.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".blocks-only_controls_2GEvs {\\n    position: absolute;\\n    z-index: 2;\\n    top: 10px;\\n    right: 15px;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"controls\": \"blocks-only_controls_2GEvs\"\n};","\nvar content = require(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./blocks-only.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./blocks-only.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./blocks-only.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {connect} from 'react-redux';\n\nimport Controls from '../containers/controls.jsx';\nimport Blocks from '../containers/blocks.jsx';\nimport GUI from '../containers/gui.jsx';\nimport HashParserHOC from '../lib/hash-parser-hoc.jsx';\nimport AppStateHOC from '../lib/app-state-hoc.jsx';\n\nimport styles from './blocks-only.css';\n\nconst mapStateToProps = state => ({vm: state.scratchGui.vm});\n\nconst VMBlocks = connect(mapStateToProps)(Blocks);\nconst VMControls = connect(mapStateToProps)(Controls);\n\nconst BlocksOnly = props => (\n    <GUI {...props}>\n        <VMBlocks\n            grow={1}\n            options={{\n                media: `static/blocks-media/`\n            }}\n        />\n        <VMControls className={styles.controls} />\n    </GUI>\n);\n\nconst App = AppStateHOC(HashParserHOC(BlocksOnly));\n\nconst appTarget = document.createElement('div');\ndocument.body.appendChild(appTarget);\n\nReactDOM.render(<App />, appTarget);\n"],"sourceRoot":""}